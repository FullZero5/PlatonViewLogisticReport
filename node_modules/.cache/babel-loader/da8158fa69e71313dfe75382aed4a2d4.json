{"remainingRequest":"/home/ec2-user/environment/PlatonViewLogisticReport/node_modules/babel-loader/lib/index.js!/home/ec2-user/environment/PlatonViewLogisticReport/node_modules/eslint-loader/index.js??ref--13-0!/home/ec2-user/environment/PlatonViewLogisticReport/src/store/getters/index.js","dependencies":[{"path":"/home/ec2-user/environment/PlatonViewLogisticReport/src/store/getters/index.js","mtime":1556538435895},{"path":"/home/ec2-user/environment/PlatonViewLogisticReport/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ec2-user/environment/PlatonViewLogisticReport/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ec2-user/environment/PlatonViewLogisticReport/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["const formatDate = st => {\n  let date = new Date(st);\n  return date.getFullYear() + \"-\" + (\"0\" + (date.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + date.getDate()).slice(-2);\n};\n\nexport default {\n  getAllDatas: ({\n    data\n  }) => data,\n  getMonthReport: ({\n    data\n  }) => formatDate(new Date(data[0].startDate.getFullYear(), data[0].startDate.getMonth(), 1)),\n  getDistanceTraveled: ({\n    data\n  }) => data.reduce((prev, next) => prev + next.distance, 0).toFixed(2),\n  getLengtData: ({\n    data\n  }) => data.length,\n  getSelectOnly: ({\n    select\n  }) => select,\n  MyEvents: ({\n    data\n  }) => {\n    const map = {};\n    data.forEach(e => (map[formatDate(e.startDate)] = map[formatDate(e.startDate)] || []).push([e.pointEntry, e.exitPoint]));\n    return map;\n  }\n};",{"version":3,"sources":["/home/ec2-user/environment/PlatonViewLogisticReport/src/store/getters/index.js"],"names":["formatDate","st","date","Date","getFullYear","getMonth","slice","getDate","getAllDatas","data","getMonthReport","startDate","getDistanceTraveled","reduce","prev","next","distance","toFixed","getLengtData","length","getSelectOnly","select","MyEvents","map","forEach","e","push","pointEntry","exitPoint"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,EAAE,IAAI;AACvB,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,EAAT,CAAX;AACA,SACEC,IAAI,CAACE,WAAL,KACA,GADA,GAEA,CAAC,OAAOF,IAAI,CAACG,QAAL,KAAkB,CAAzB,CAAD,EAA8BC,KAA9B,CAAoC,CAAC,CAArC,CAFA,GAGA,GAHA,GAIA,CAAC,MAAMJ,IAAI,CAACK,OAAL,EAAP,EAAuBD,KAAvB,CAA6B,CAAC,CAA9B,CALF;AAOD,CATD;;AAWA,eAAe;AACbE,EAAAA,WAAW,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAcA,IADd;AAEbC,EAAAA,cAAc,EAAE,CAAC;AAAED,IAAAA;AAAF,GAAD,KACdT,UAAU,CACR,IAAIG,IAAJ,CAASM,IAAI,CAAC,CAAD,CAAJ,CAAQE,SAAR,CAAkBP,WAAlB,EAAT,EAA0CK,IAAI,CAAC,CAAD,CAAJ,CAAQE,SAAR,CAAkBN,QAAlB,EAA1C,EAAwE,CAAxE,CADQ,CAHC;AAMbO,EAAAA,mBAAmB,EAAE,CAAC;AAAEH,IAAAA;AAAF,GAAD,KACnBA,IAAI,CAACI,MAAL,CAAY,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,GAAGC,IAAI,CAACC,QAAxC,EAAkD,CAAlD,EAAqDC,OAArD,CAA6D,CAA7D,CAPW;AAQbC,EAAAA,YAAY,EAAE,CAAC;AAAET,IAAAA;AAAF,GAAD,KAAcA,IAAI,CAACU,MARpB;AASbC,EAAAA,aAAa,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgBA,MATlB;AAUbC,EAAAA,QAAQ,EAAE,CAAC;AAAEb,IAAAA;AAAF,GAAD,KAAc;AACtB,UAAMc,GAAG,GAAG,EAAZ;AACAd,IAAAA,IAAI,CAACe,OAAL,CAAaC,CAAC,IACZ,CAACF,GAAG,CAACvB,UAAU,CAACyB,CAAC,CAACd,SAAH,CAAX,CAAH,GAA+BY,GAAG,CAACvB,UAAU,CAACyB,CAAC,CAACd,SAAH,CAAX,CAAH,IAAgC,EAAhE,EAAoEe,IAApE,CAAyE,CACvED,CAAC,CAACE,UADqE,EAEvEF,CAAC,CAACG,SAFqE,CAAzE,CADF;AAMA,WAAOL,GAAP;AACD;AAnBY,CAAf","sourcesContent":["const formatDate = st => {\r\n  let date = new Date(st);\r\n  return (\r\n    date.getFullYear() +\r\n    \"-\" +\r\n    (\"0\" + (date.getMonth() + 1)).slice(-2) +\r\n    \"-\" +\r\n    (\"0\" + date.getDate()).slice(-2)\r\n  );\r\n};\r\n\r\nexport default {\r\n  getAllDatas: ({ data }) => data,\r\n  getMonthReport: ({ data }) =>\r\n    formatDate(\r\n      new Date(data[0].startDate.getFullYear(), data[0].startDate.getMonth(), 1)\r\n    ),\r\n  getDistanceTraveled: ({ data }) =>\r\n    data.reduce((prev, next) => prev + next.distance, 0).toFixed(2),\r\n  getLengtData: ({ data }) => data.length,\r\n  getSelectOnly: ({ select }) => select,\r\n  MyEvents: ({ data }) => {\r\n    const map = {};\r\n    data.forEach(e =>\r\n      (map[formatDate(e.startDate)] = map[formatDate(e.startDate)] || []).push([\r\n        e.pointEntry,\r\n        e.exitPoint\r\n      ])\r\n    );\r\n    return map;\r\n  }\r\n};\r\n"]}]}