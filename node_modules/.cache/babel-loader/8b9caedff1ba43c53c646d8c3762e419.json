{"remainingRequest":"/home/ec2-user/environment/PlatonViewLogisticReport/node_modules/babel-loader/lib/index.js!/home/ec2-user/environment/PlatonViewLogisticReport/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ec2-user/environment/PlatonViewLogisticReport/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ec2-user/environment/PlatonViewLogisticReport/src/components/FileLoader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ec2-user/environment/PlatonViewLogisticReport/src/components/FileLoader.vue","mtime":1556541240542},{"path":"/home/ec2-user/environment/PlatonViewLogisticReport/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ec2-user/environment/PlatonViewLogisticReport/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ec2-user/environment/PlatonViewLogisticReport/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ec2-user/environment/PlatonViewLogisticReport/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from \"vuex\";\nexport default {\n  name: \"FileLoader\",\n\n  data() {\n    return {\n      headers: [{\n        key: \"startDate\",\n        type: \"Data\"\n      }, {\n        key: \"endDate\",\n        type: \"Data\"\n      }, {\n        key: \"numberCar\",\n        type: \"String\"\n      }, {\n        key: \"respoder\",\n        type: \"String\"\n      }, {\n        key: \"distance\",\n        type: \"Number\"\n      }, {\n        key: \"title\",\n        type: \"String\"\n      }, {\n        key: \"pointEntry\",\n        type: \"Array\"\n      }, {\n        key: \"exitPoint\",\n        type: \"Array\"\n      }],\n      parse_csv: []\n    };\n  },\n\n  methods: { ...mapActions([\"addToItems\"]),\n\n    convetoType(type, data) {\n      if (typeof data !== \"undefined\") {\n        switch (type) {\n          case \"Number\":\n            {\n              let ns = data.replace(/,/g, \".\");\n              return parseFloat(ns); //Number(data);\n\n              break;\n            }\n\n          case \"Array\":\n            {\n              return data;\n              break;\n            }\n\n          case \"Data\":\n            {\n              let values = data.split(/[^0-9]/),\n                  year = parseInt(values[2], 10),\n                  month = parseInt(values[1], 10) - 1,\n                  // Month is zero based, so subtract 1\n              day = parseInt(values[0], 10),\n                  hours = parseInt(values[3], 10),\n                  minutes = parseInt(values[4], 10),\n                  seconds = parseInt(values[5], 10);\n              return new Date(year, month, day, hours, minutes, seconds);\n              break;\n            }\n\n          default:\n            {\n              return data;\n            }\n        }\n      }\n    },\n\n    csvJSON(csv) {\n      let vm = this;\n      let lines = csv.split(\"\\n\");\n      var result = [];\n      lines.map(function (line, indexLine) {\n        if (indexLine < 1) return; // Jump header line\n\n        var obj = {};\n        var currentline = line.split(\";\");\n        vm.headers.map(function (header, indexHeader) {\n          //console.log(typeof(currentline[indexHeader]));\n          obj[header[\"key\"]] = vm.convetoType(header[\"type\"], currentline[indexHeader]);\n        });\n        result.push(obj);\n      });\n      result.pop(); // remove the last item because undefined values\n\n      return result; // JavaScript object\n    },\n\n    loadCSV(e) {\n      let vm = this;\n\n      if (window.FileReader) {\n        const reader = new FileReader();\n        reader.readAsText(e.target.files[0], \"cp1251\"); // Handle errors load\n\n        reader.onload = function (event) {\n          let csv = event.target.result; //vm.parse_csv = vm.csvJSON(csv);\n\n          vm.addToItems(vm.csvJSON(csv));\n        };\n\n        reader.onerror = function (evt) {\n          if (evt.target.error.name == \"NotReadableError\") {\n            alert(\"Canno't read file !\");\n          }\n        };\n      } else {\n        alert(\"FileReader are not supported in this browser.\");\n      }\n    }\n\n  }\n};",{"version":3,"sources":["FileLoader.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-container grid-list-xl text-xs-center>\r\n    <v-layout row wrap>\r\n      <v-flex xs10 offset-xs1>\r\n        <v-btn fab color=\"primary ripple\" @click=\"$refs.inputUpload.click()\">\r\n          <v-icon>attach_file</v-icon>\r\n        </v-btn>\r\n        <input v-show=\"false\" ref=\"inputUpload\" accept=\".csv\" type=\"file\" @change=\"loadCSV($event)\">\r\n      </v-flex>\r\n    </v-layout>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"FileLoader\",\r\n  data() {\r\n    return {\r\n      headers: [\r\n        { key: \"startDate\", type: \"Data\" },\r\n        { key: \"endDate\", type: \"Data\" },\r\n        { key: \"numberCar\", type: \"String\" },\r\n        { key: \"respoder\", type: \"String\" },\r\n        { key: \"distance\", type: \"Number\" },\r\n        { key: \"title\", type: \"String\" },\r\n        { key: \"pointEntry\", type: \"Array\" },\r\n        { key: \"exitPoint\", type: \"Array\" }\r\n      ],\r\n      parse_csv: []\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions([\"addToItems\"]),\r\n    convetoType(type, data) {\r\n      if (typeof data !== \"undefined\") {\r\n        switch (type) {\r\n          case \"Number\":{\r\n            let ns = data.replace(/,/g, \".\");\r\n            return parseFloat(ns); //Number(data);\r\n            break;\r\n          }\r\n          case \"Array\":{\r\n            return data;\r\n            break;\r\n          }\r\n          case \"Data\":{\r\n            let values = data.split(/[^0-9]/),\r\n              year = parseInt(values[2], 10),\r\n              month = parseInt(values[1], 10) - 1, // Month is zero based, so subtract 1\r\n              day = parseInt(values[0], 10),\r\n              hours = parseInt(values[3], 10),\r\n              minutes = parseInt(values[4], 10),\r\n              seconds = parseInt(values[5], 10);\r\n            return new Date(year, month, day, hours, minutes, seconds);\r\n            break;\r\n          }\r\n          default:{\r\n            return data;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    csvJSON(csv) {\r\n      let vm = this;\r\n      let lines = csv.split(\"\\n\");\r\n      var result = [];\r\n      lines.map(function(line, indexLine) {\r\n        if (indexLine < 1) return; // Jump header line\r\n        var obj = {};\r\n        var currentline = line.split(\";\");\r\n        vm.headers.map(function(header, indexHeader) {\r\n          //console.log(typeof(currentline[indexHeader]));\r\n          obj[header[\"key\"]] = vm.convetoType(\r\n            header[\"type\"],\r\n            currentline[indexHeader]\r\n          );\r\n        });\r\n        result.push(obj);\r\n      });\r\n      result.pop(); // remove the last item because undefined values\r\n      return result; // JavaScript object\r\n    },\r\n    loadCSV(e) {\r\n      let vm = this;\r\n      if (window.FileReader) {\r\n        const reader = new FileReader();\r\n        reader.readAsText(e.target.files[0], \"cp1251\");\r\n        // Handle errors load\r\n        reader.onload = function(event) {\r\n          let csv = event.target.result;\r\n          //vm.parse_csv = vm.csvJSON(csv);\r\n          vm.addToItems(vm.csvJSON(csv));\r\n        };\r\n        reader.onerror = function(evt) {\r\n          if (evt.target.error.name == \"NotReadableError\") {\r\n            alert(\"Canno't read file !\");\r\n          }\r\n        };\r\n      } else {\r\n        alert(\"FileReader are not supported in this browser.\");\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.ripple {\r\n  box-sizing:border-box;\r\n  position:relative;\r\n}\r\n\r\n.ripple:before {\r\n  animation:ripple 2s ease-out infinite;\r\n  border:solid 2px #09c;\r\n  border-radius:1em;\r\n  bottom:0;\r\n  box-sizing:border-box;\r\n  content:\"\";\r\n  left:0;\r\n  position:absolute;\r\n  right:0;\r\n  top:0;\r\n}\r\n\r\n.ripple:after {\r\n  animation:ripple 2s 1s ease-out infinite;\r\n  border:solid 2px #09c;\r\n  border-radius:2em;\r\n  bottom:0;\r\n  box-sizing:border-box;\r\n  content:\"\";\r\n  left:0;\r\n  position:absolute;\r\n  right:0;\r\n  top:0;\r\n}\r\n\r\n@keyframes ripple {\r\n  0% {\r\n    opacity:.25;\r\n  }\r\n  100% {\r\n    border-radius:2em;\r\n    opacity:0;\r\n    transform:scale(3);\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}